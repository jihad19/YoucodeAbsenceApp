<UserControl x:Class="GADesktopUI.Login.Views.LoginCredentialsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:GADesktopUI.Login.Views"
             mc:Ignorable="d" 
             d:DesignHeight="1045" d:DesignWidth="1533" 	>
    <UserControl.Resources>
        <!--<Style x:Key="poppinsReg">
            <Setter Property="TextElement.FontFamily" Value="fonts/POPPINS-REGULAR"/>
        </Style>
        <Style x:Key="poppinsBold">
            <Setter Property="TextElement.FontFamily" Value="fonts/POPPINS-BOLD"/>
        </Style>-->
        <!--Round corners for Textbox-->
        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="12">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                    <Setter Property="MinWidth" Value="100"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Round Button style-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#F2799B"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#F2799B"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFFFFF"/>
        <Style x:Key="RoundBtn" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,-26,-6.667">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EA4B78"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EA4B78"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#E92E63"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#E92E63"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ContactUsRounded" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Border Background="{TemplateBinding Background}" CornerRadius="25" Margin="10,0"/>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Path x:Name="PathMain" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                            <ContentPresenter x:Name="ContentPresenterMain" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="6,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="PathMain" Value="Collapsed"/>
                                        <Setter Property="Margin" TargetName="ContentPresenterMain" Value="0"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="auto" MinWidth="464" />
            <ColumnDefinition Width="auto" MinWidth="117" />
            <ColumnDefinition Width="auto" MinWidth="764" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="22" />
            <RowDefinition Height="auto"  MinHeight="216" />
            <RowDefinition Height="auto"  MinHeight="195" />
            <RowDefinition Height="auto"  MinHeight="242" />
            <RowDefinition Height="auto"  MinHeight="53" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>



        <!--Header Title-->
        <StackPanel Grid.Column="3" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center"  >
            <TextBlock Height="78"  TextWrapping="Wrap" Text="Sign in to your account"  Width="744" FontFamily="{StaticResource CeraBlack}" FontSize="60" Foreground="#FF152C5B"/>
            <TextBlock Height="34"  TextWrapping="Wrap" Text="Sign in to your youcode account"  Width="744" FontFamily="{StaticResource CeraLight}" FontSize="20" Foreground="#FF8793AC"/>
        </StackPanel>
        <!--Login Inputs-->
        <StackPanel Grid.Column="3" Grid.Row="4" Orientation="Horizontal" VerticalAlignment="Center" >

            <Grid>
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="auto"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel Margin="0,0,20,0" Panel.ZIndex="1" RenderTransformOrigin="0.483,0.628"  >
                    <TextBlock x:Name="UsernameTitle" Text="Username" FontSize="23" FontFamily="{StaticResource CeraBold}" Margin="0,0,0,17" Foreground="#FF152C5B"></TextBlock>
                    <TextBox x:Name="UsernameInput" Template="{StaticResource TextBoxBaseControlTemplate}" Height="54" MinWidth="150" TextWrapping="Wrap" Padding="40,0,0,0" Text="" FontSize="16" Width="333" FontFamily="Cera Pro light" Foreground="#FF202021" SelectionBrush="#FFA078E6" BorderBrush="{x:Null}" FontWeight="Light" CaretBrush="#FFA078E6"/>
                    <TextBlock x:Name="UsernamePlaceholder" IsHitTestVisible="False" Text="Username" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="41,-53,0,0" Foreground="DarkGray" FontFamily="{StaticResource CeraLight}" FontSize="14">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=UsernameInput}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Rectangle Height="2" RadiusY="30" RadiusX="30" Stroke="#CCFFFFFF" StrokeThickness="3" Width="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#F2EDEEF8" Offset="0"/>
                                <GradientStop Color="#E5EDEEF8" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Height="2" RadiusY="30" RadiusX="30" Stroke="#CCFFFFFF" StrokeThickness="3" Width="1.333">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#F2EDEEF8" Offset="0"/>
                                <GradientStop Color="#E5EDEEF8" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle x:Name="userIcon" Height="14.666" StrokeThickness="3" Width="14.666" HorizontalAlignment="Left" Margin="14,-62,0,0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="/images/icon/user.png"/>
                        </Rectangle.Fill>
                    </Rectangle>

                </StackPanel>
                <StackPanel  Panel.ZIndex="1" RenderTransformOrigin="0.483,0.628" HorizontalAlignment="Right" Grid.Column="2">
                    <TextBlock x:Name="PasswordTitle" Text="Password" FontSize="23" FontFamily="{StaticResource CeraBold}" Margin="0,0,0,17" Foreground="#FF152C5B"></TextBlock>
                    <TextBox x:Name="PasswordInput" Template="{StaticResource TextBoxBaseControlTemplate}" Height="54"  MinWidth="150" TextWrapping="Wrap" Padding="40,0,0,0" Text="" FontSize="16" Width="333" FontFamily="{StaticResource PasswordFont}" Foreground="#FF202021" SelectionBrush="#FFA078E6" BorderBrush="{x:Null}" FontWeight="Light" CaretBrush="#FFA078E6"/>
                    <TextBlock x:Name="PasswordPlaceholder" IsHitTestVisible="False" Text="password" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="41,-53,0,0" Foreground="DarkGray" FontFamily="{StaticResource CeraLight}" FontSize="14">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=PasswordInput}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Rectangle Height="14.666" StrokeThickness="3" Width="14.666" HorizontalAlignment="Left" Margin="14,-62,0,0">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="/images/icon/padlock.png"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Height="22.667" TextWrapping="Wrap" Text="Forgot password ?" Width="112" HorizontalAlignment="Right" Margin="0,6,0,0" FontFamily="{StaticResource CeraRegular}" Foreground="#FF8793AC"/>

                </StackPanel>
                <StackPanel Grid.Row="2" Grid.ColumnSpan="2">
                    <TextBlock x:Name="ErrorMessage" Visibility="{Binding IsErrorVisible, Converter={StaticResource BooleanToVisibilityConverter}}"  FontFamily="{StaticResource CeraRegular}"  Foreground="#FFFF623D" FontSize="14"></TextBlock>
                </StackPanel>
            </Grid>
            


        </StackPanel>
        <!--Login button-->
        <Button x:Name="LoginBtn"  Content="Login" Style="{DynamicResource RoundBtn}" Grid.Column="3" HorizontalAlignment="Left" Height="53" Grid.Row="5" VerticalAlignment="Top" Width="155" BorderBrush="{x:Null}" Background="#FFE92E63" Foreground="White" FontFamily="{StaticResource CeraRegular}" FontSize="14">
            <Button.Effect>
                <DropShadowEffect Direction="309" ShadowDepth="6" BlurRadius="25" Opacity="0.415"  Color="#E92E63"/>
            </Button.Effect>
        </Button>

    </Grid>
</UserControl>
